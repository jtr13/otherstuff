}
bnplot(10, .5)
bnplot(10, .5, "curve")
bnplot <- function(n, p, x = NULL, shade = NULL) {
df <- data.frame(x = 0:n, ybn = dbinom(0:n, n, p))
g <- ggplot() +
geom_col(data = df, aes(x, ybn),
color = "grey50", fill = "lightblue") +
scale_x_continuous(breaks = 0:n, limits = c(0, n)) +
scale_y_continuous(expand = expand_scale(c(0, .05))) +
ylab("density") +
theme_grey(14) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
if (!is.null(shade)) {
print("hi")
xn <- seq(0, n, .1)
yn <- dnorm(xn, mean = n*p, sd = sqrt(n*p*(1-p)))
df2 <- data.frame(xn, yn)
g <- g + geom_line(data = df2, aes(xn, yn))
if (shade != "curve") {
df3 <- df2 %>% filter (xn <= x)
g <- g + geom_area(data = df3, aes(x = xn, y = yn),
fill = "yellow", alpha = .5)
if (shade != "fill") {
df4 <- df2 %>% filter (xn >= x & xn <= x + .5)
g <- g + geom_area(data = df4,
aes(x = xn, y = yn), color = "black",
fill = "yellow", alpha = .8)
}
g
}
bnplot(10, .5, "curve")
bnplot(10, .5, "fill")
debugSource('~/Dropbox/Columbia Stats/STAT 1201/Lectures/4ContinuousRandomVariables/bnplot.R')
bnplot(10, .5, "fill")
shade
q
bnplot(10, .5, shade = "curve")
bnplot <- function(n, p, x = NULL, shade = NULL) {
df <- data.frame(x = 0:n, ybn = dbinom(0:n, n, p))
g <- ggplot() +
geom_col(data = df, aes(x, ybn),
color = "grey50", fill = "lightblue") +
scale_x_continuous(breaks = 0:n, limits = c(0, n)) +
scale_y_continuous(expand = expand_scale(c(0, .05))) +
ylab("density") +
theme_grey(14) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
if (!is.null(shade)) {
xn <- seq(0, n, .1)
yn <- dnorm(xn, mean = n*p, sd = sqrt(n*p*(1-p)))
df2 <- data.frame(xn, yn)
g <- g + geom_line(data = df2, aes(xn, yn))
if (shade != "curve") {
df3 <- df2 %>% filter (xn <= x)
g <- g + geom_area(data = df3, aes(x = xn, y = yn),
fill = "yellow", alpha = .5)
if (shade != "fill") {
df4 <- df2 %>% filter (xn >= x & xn <= x + .5)
g <- g + geom_area(data = df4,
aes(x = xn, y = yn), color = "black",
fill = "yellow", alpha = .8)
}
g
}
bnplot(10, .5, shade = "fill")
df2
xn
x
bnplot(10, .5, x = 5, shade = "fill")
bnplot(10, .5, x = 5, shade = "asdf")
source('~/Dropbox/Columbia Stats/STAT 1201/Lectures/4ContinuousRandomVariables/bnplot.R')
bnplot(10, .5, x = 5, shade = "asdf")
bnplot(10, .5, x = 7, shade = TRUE)
source('~/Dropbox/Columbia Stats/STAT 1201/Lectures/4ContinuousRandomVariables/bnplot.R')
bnplot(10, .5, x = 7, shade = TRUE)
bnplot(10, .5, x = 7, curve = TRUE, shade = TRUE)
addcurve <- function(g, n, p, x) {
xn <- seq(0, n, .1)
yn <- dnorm(xn, mean = n*p, sd = sqrt(n*p*(1-p)))
df2 <- data.frame(xn, yn)
g <- g + geom_line(data = df2, aes(xn, yn))
g
}
g <- ggplot() +
geom_col(data = df, aes(x, ybn),
color = "grey50", fill = "lightblue") +
scale_x_continuous(breaks = 0:n, limits = c(0, n)) +
scale_y_continuous(expand = expand_scale(c(0, .05))) +
ylab("density") +
theme_grey(14) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
g
addcurve(g, 30, .5, 11)
n
p
addcurve(g, 30, .3, 11)
addcurve <- function(n, p, x) {
xn <- seq(0, n, .1)
yn <- dnorm(xn, mean = n*p, sd = sqrt(n*p*(1-p)))
df2 <- data.frame(xn, yn)
geom_line(data = df2, aes(xn, yn))
}
g + addcurve(30, .3, 11)
addcurve <- function(n, p) {
xn <- seq(0, n, .1)
yn <- dnorm(xn, mean = n*p, sd = sqrt(n*p*(1-p)))
df2 <- data.frame(xn, yn)
geom_line(data = df2, aes(xn, yn))
}
addcurve(30, .5)
g + addcurve(30, .5)
g + addcurve(30, .3)
source('~/Dropbox/Columbia Stats/STAT 1201/Lectures/4ContinuousRandomVariables/bnplot.R')
bnplot(10, .5)
bnplot(10, .5, contcorr = FALSE)
bnplot(10, .5, 7)
bnplot(10, .5, 7, contcorr = FALSE)
bnplot(10, .5, 7, shade = FALSE)
bnplot(10, .5, 7, curve = FALSE)
source('~/otherstuff/bnplot.R')
setwd("~/otherstuff")
getwd()
bnplot(20, .5, curve = FALSE)
bnplot(20, .5)
bnplot(20, .5, curve = FALSE)
bnplot(20, .5, shade = FALSE)
20 * .5 *.5
bnplot(20, .5, shade = FALSE) +
annotate("text", x = 18, y = .15, label = "mean: 10, sd: 5"
```
bnplot(20, .5, shade = FALSE) +
annotate("text", x = 18, y = .15, label = "mean: 10, sd: 5"
```
g <- bnplot(20, .5, shade = FALSE)
g
g + annotate("text", x = 18, y = .15, label = "mean: 10, sd: 5"
```
g + annotate("text", x = 18, y = .15, label = "mean: 10, sd: 5")
g + annotate("text", x = 18, y = .15, label = "mean: 10, sd: 5", size = 2)
g + annotate("text", x = 18, y = .15, label = "mean: 10, sd: 5", size = 5)
g + annotate("text", x = 18, y = .15, label = "normal curve: \n mean: 10, sd: 5", size = 5)
sqrt(5)
g + annotate("text", x = 18, y = .15, label = "normal curve: \n mean: 10, sd: 2.24", size = 5)
g + annotate("text", x = 17, y = .15, label = "normal curve: \n mean: 10, sd: 2.24", size = 5)
bnplot(20, .5, shade = FALSE) + annotate("text", x = 17, y = .15, label = "normal curve: \n mean: 10, sd: 2.24", size = 5)
bnplot(20, .5, x = 13, contcorr = FALSE)
bnplot(20, .5, x = 13, contcorr = FALSE) +
annotate("text", x = 17, y = .15, label =
"only half of bar #13 is shaded")
bnplot(20, .5, x = 13, contcorr = FALSE) +
annotate("text", x = 17, y = .15, label =
"only half of \n bar #13 is shaded", size = 5)
bnplot(20, .5, x = 13, contcorr = FALSE) +
annotate("text", x = 17, y = .08, label =
"only half of \n bar #13 is shaded", size = 5)
bnplot(20, .5, x = 13) +
annotate("text", x = 17, y = .08, label =
"full bar is shaded \n using 13.5 instead of 13", size = 5)
bnplot(20, .5, x = 13) +
annotate("text", x = 17, y = .08, label =
"full bar is shaded \n using 13.5 \n instead of 13", size = 5)
2 *.5*.5
sqrt(.5)
bnplot(2, .5, 1)
bnplot(2, .5)
bnplot(2, .5, shade = FALSE)
source('~/otherstuff/bnplot.R')
bnplot(2, .5, shade = FALSE)
source('~/otherstuff/bnplot.R')
bnplot(2, .5, shade = FALSE)
source('~/otherstuff/bnplot.R')
bnplot(2, .5, shade = FALSE)
bnplot(2, .5, 1)
source('~/otherstuff/bnplot.R')
bnplot(2, .5, 1)
df4 <- df2 %>% filter (xn >= x & xn <= x + .45)
source('~/otherstuff/bnplot.R')
bnplot(2, .5, 1)
source('~/otherstuff/bnplot.R')
bnplot(2, .5, 1)
source('~/otherstuff/bnplot.R')
bnplot(2, .5, 1)
source('~/otherstuff/bnplot.R')
bnplot(2, .5, 1)
pnorm(1.5, 1, sqrt(.25))
1 *.5*.5
sqrt(.25)
pnorm(1.5, 1, .5)
bnplot(2, .2, 1)
bnplot(2, .2, 0)
source('~/otherstuff/bnplot.R')
bnplot(2, .2, 0)
source('~/otherstuff/bnplot.R')
bnplot(2, .2, 0)
pbinom(2, 0, .2)
# shade normal
df3 <- df2 %>% filter (xn <= 0.5)
g2 <- g1 + geom_area(data = df3, aes(x = xn, y = yn),
fill = "yellow", alpha = .5)
g2
# continuity correction
x <- seq(10, 90, 1)
dc <- x %>% dnorm(50, 10)
ncurve <- data.frame(x, dc)
g <- ggplot(ncurve, aes(x, dc)) +
geom_col(color = "wheat3", fill = "wheat", width = 1) +
theme_grey(16) + xlab("") + ylab("")
g
bnplot(20, .5, x = 13) +
annotate("text", x = 17, y = .08, label =
"continuity \n correction", size = 5)
x <- seq(10, 90, 1)
dc <- x %>% dnorm(50, 10)
ncurve <- data.frame(x, dc)
g <- ggplot(ncurve, aes(x, dc)) +
geom_col(color = "wheat3", fill = "wheat", width = 1) +
theme_grey(16) + xlab("") + ylab("") + geom_line(data = ncurve, aes(x, dc), color = "blue")
g
# continuity correction
g +  geom_line(data = ncurve, aes(x, dc), color = "blue") +
scale_x_continuous(limits = c(58, 64),
breaks = 59:63)
bnplot(100, .5, 62)
bnplot(100, .5, 62) + scale_x_continuous(limits = c(58, 64), breaks = 59:63)
# normal approximation to binomial
xn <- seq(-2.5, n, .1)
df2 <- data.frame(xn, yn = dnorm(xn, mean = n*p,
sd = sqrt(n*p*(1-p))))
g1 <- g + geom_line(data = df2, aes(xn, yn))
g1
x <- seq(10, 90, 1)
dc <- x %>% dnorm(50, 10)
ncurve <- data.frame(x, dc)
g <- ggplot(ncurve, aes(x, dc)) +
geom_col(color = "wheat3", fill = "wheat", width = 1) +
theme_grey(16) + xlab("") + ylab("") + geom_line(data = ncurve, aes(x, dc), color = "blue")
g
x <- seq(10, 90, .1)
dc <- x %>% dnorm(50, 10)
ncurve <- data.frame(x, dc)
g <- ggplot(ncurve, aes(x, dc)) +
geom_col(color = "wheat3", fill = "wheat", width = 1) +
theme_grey(16) + xlab("") + ylab("") + geom_line(data = ncurve, aes(x, dc), color = "blue")
g
x <- seq(10, 90, 1)
dc <- x %>% dnorm(50, 10)
ncurve <- data.frame(x, dc)
g <- ggplot(ncurve, aes(x, dc)) +
geom_col(color = "wheat3", fill = "wheat", width = 1) +
theme_grey(16) + xlab("") + ylab("") + geom_line(data = ncurve, aes(x, dc), color = "blue")
g
x <- seq(10, 90, 1)
dc <- x %>% dnorm(50, 10)
ncurve <- data.frame(x, dc)
g <- ggplot(ncurve, aes(x, dc)) +
geom_col(color = "wheat3", fill = "wheat", width = 1) +
theme_grey(16) + xlab("") + ylab("") + geom_line(color = "blue")
g
bnplot(100, .5, 50)
bnplot(100, .5, 50, shade = FALSE)
bnplot(100, .5, 50, shade = FALSE) +
scale_x_continuous(breaks = seq(10, 90, 10))
bnplot(100, .5, 50, shade = FALSE) +
scale_x_continuous(limits = c(30, 70), breaks = seq(10, 90, 10))
bnplot(100, .5, 50, shade = FALSE) +
scale_x_continuous(limits = c(30, 70),
breaks = seq(10, 90, 10)) +
annotate("text", x = 65, y = .06, label = "n = 100 \n p  = .5)
```
bnplot(100, .5, 50, shade = FALSE) +
scale_x_continuous(limits = c(30, 70),
breaks = seq(10, 90, 10)) +
annotate("text", x = 65, y = .06,
label = "n = 100 \n p  = .5")
bnplot(100, .5, 50, shade = FALSE) +
scale_x_continuous(limits = c(30, 70),
breaks = seq(10, 90, 10)) +
annotate("text", x = 65, y = .06,
label = "n = 100 \n p  = .5")
bnplot(100, .5, 50, shade = FALSE) +
scale_x_continuous(limits = c(30, 70),
breaks = seq(10, 90, 10)) +
annotate("text", x = 65, y = .06,
label = "n = 100 \n p  = .5", size = 5)
bnplot(100, .5, 50, shade = FALSE) +
scale_x_continuous(limits = c(52, 57),
breaks = seq(10, 90, 10)) +
annotate("text", x = 65, y = .06,
label = "n = 100 \n p  = .5", size = 5)
bnplot(100, .5, 50, shade = FALSE) +
scale_x_continuous(limits = c(50, 60),
breaks = seq(10, 90, 10)) +
annotate("text", x = 65, y = .06,
label = "n = 100 \n p  = .5", size = 5)
bnplot(100, .5, 50, shade = FALSE) +
scale_x_continuous(limits = c(50, 60)) +
annotate("text", x = 65, y = .06,
label = "n = 100 \n p  = .5", size = 5)
bnplot(100, .5, 50, shade = FALSE) +
scale_x_continuous(limits = c(50, 60),
breaks = 50:60) +
annotate("text", x = 65, y = .06,
label = "n = 100 \n p  = .5", size = 5)
dnorm(55, 50, 25)
bnplot(100, .5, 50, shade = FALSE) +
geom_col(aes(fill = x)) +
scale_x_continuous(limits = c(50, 60),
breaks = 50:60) +
annotate("text", x = 65, y = .06,
label = "n = 100 \n p  = .5", size = 5)
bnplot(100, .5, 50, shade = FALSE) +
geom_col() +
scale_x_continuous(limits = c(50, 60),
breaks = 50:60) +
annotate("text", x = 65, y = .06,
label = "n = 100 \n p  = .5", size = 5)
bnplot(100, .5, 50, shade = FALSE) +
geom_col(fill = "green") +
scale_x_continuous(limits = c(50, 60),
breaks = 50:60) +
annotate("text", x = 65, y = .06,
label = "n = 100 \n p  = .5", size = 5)
bnplot(100, .5, 50, shade = FALSE) +
geom_col(fill = "green") +
scale_x_continuous(limits = c(50, 60),
breaks = 50:60)
bnplot(100, .5, 50, shade = FALSE) +
geom_col(fill = "green") +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
bnplot(100, .5, 50, shade = FALSE) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
source('~/otherstuff/bnplot.R')
bnplot(100, .5, 50, a = 51) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
bnplot(100, .5, 55, a = 53) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
source('~/otherstuff/bnplot.R')
bnplot(100, .5, 55, a = 53) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
source('~/otherstuff/bnplot.R')
bnplot(100, .5, 55, a = 53) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
source('~/otherstuff/bnplot.R')
bnplot(100, .5, 55, a = 53) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
source('~/otherstuff/bnplot.R')
bnplot(100, .5, 55, a = 53) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
bnplot(100, .5, 55, a = 53, contcorr = FALSE) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
bnplot(100, .5, 55, a = 55, contcorr = FALSE) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
bnplot(100, .5, 55, a = 55, contcorr = TRUE) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
bnplot(100, .5, 50, shade = FALSE) +
scale_x_continuous(limits = c(30, 70),
breaks = seq(10, 90, 10)) +
annotate("text", x = 65, y = .06,
label = "n = 100 \n p  = .5", size = 5)
bnplot(100, .5, 55, a = 55, shade = FALSE) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
bnplot(100, .5, 55, shade = FALSE) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
bnplot(100, .5, 55.5, a = 54.4, contcorr = FALSE) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
bnplot(100, .5, 55.6, a = 54.4, contcorr = FALSE) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
bnplot(100, .5, 55.7, a = 54.3, contcorr = FALSE) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
bnplot(100, .5, 55.4, a = 54.6, contcorr = FALSE) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
bnplot(100, .5, 55.5, a = 54.5, contcorr = FALSE) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
bnplot(100, .5, 53, a = 56, contcorr = FALSE) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
bnplot(100, .5, 56, a = 53, contcorr = FALSE) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
bnplot(100, .5, 56, a = 53) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
x <- seq(10, 90, 1)
dc <- x %>% dnorm(50, 10)
ncurve <- data.frame(x, dc)
g <- ggplot(ncurve, aes(x, dc)) +
geom_col(color = "wheat3", fill = "wheat", width = 1) +
theme_grey(16) + xlab("") + ylab("") + geom_line(color = "blue")
g
bnplot(3, .4)
source('~/otherstuff/bnplot.R')
bnplot(3, .4)
source('~/otherstuff/bnplot.R')
bnplot(3, .4)
bnplot(3, .4, shade = TRUE)
bnplot(3, .4, contcorr  = TRUE)
bnplot(3, .4, 2)
bnplot(3, .4, 2, shade = TRUE)
bnplot(3, .4, 2, shade = TRUE, contcorr = TRUE)
source('~/otherstuff/bnplot.R')
bnplot(3, .4, 2, shade = TRUE, contcorr = TRUE)
b <- pbinom(3, .4, 2)
b <- pbinom(3, 2, .4)
b
b <- pbinom(2, 3, .4)
b
.24*3
na <- pnorm(2.5, 1.5, .72)
na
source('~/Dropbox/Columbia Stats/STAT 1201/Lectures/4ContinuousRandomVariables/bnplot.R')
source("~/otherstuff/bnplot.R")
bnplot(20, .5, curve = FALSE)
bnplot(20, .5, shade = FALSE) + annotate("text", x = 17, y = .15, label = "normal curve: \n mean: 10, sd: 2.24", size = 5)
bnplot(20, .5) + annotate("text", x = 17, y = .15, label = "normal curve: \n mean: 10, sd: 2.24", size = 5)
bnplot(20, .5, x = 13, contcorr = FALSE) +
annotate("text", x = 17, y = .08, label =
"only half of \n bar #13 is shaded", size = 5)
bnplot(20, .5, x = 13, shade = TRUE) +
annotate("text", x = 17, y = .08, label =
"only half of \n bar #13 is shaded", size = 5)
bnplot(20, .5, x = 13, contcorr = TRUE) +
annotate("text", x = 17, y = .08, label =
"continuity \n correction", size = 5)
bnplot(20, .5, x = 13, shade = TRUE, contcorr = TRUE) +
annotate("text", x = 17, y = .08, label =
"continuity \n correction", size = 5)
bnplot(100, .5, 50, shade = FALSE) +
scale_x_continuous(limits = c(30, 70),
breaks = seq(10, 90, 10)) +
annotate("text", x = 65, y = .06,
label = "n = 100 \n p  = .5", size = 5)
bnplot(100, .5, 55, shade = FALSE) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
bnplot(100, .5, 55.5, a = 54.5, shade = TRUE) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
bnplot(100, .5, 56, a = 53, contcorr = FALSE) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
bnplot(100, .5, 56, a = 53, shade = TRUE) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
bnplot(100, .5, 56, a = 53, shade = TRUE,
contcorr = TRUE) +
scale_x_continuous(limits = c(50.5, 59.5),
breaks = 50:60)
.3*22
pnorm(7.16)
options(digits = 15)
pnorm(7.16)
6.25/4
25/4
250/6.25
x <- read.csv("~/Downloads/names.csv")
str(x)
y <- strsplit(x$Student)
y <- strsplit(x$Student, ",")
y <- strsplit(x$Student, "\,")
y <- lapply(x$Student, strsplit, ",")
x <- read.csv("~/Downloads/names.csv", stringsAsFactors = FALSE)
y <- strsplit(x$Student, ",")
y
y <- strsplit(x$Student, ", ")
y
z <- lapply(y, function(x) [[1]][2])
z <- lapply(y, function(x) x[[1]][2])
z
y
y[[1]]
y[[1]][1]
y[[1]][2]
z <- lapply(y, function(.x) .x[[1]][[1]][2])
z
z <- lapply(y, function(x) x[[1]])
z
z <- lapply(y, function(x) x[1])
z
z <- lapply(y, function(x) x[2])
z
z <- lapply(y, function(x) x[2]) %>% unlist()
z <- unlist(lapply(y, function(x) x[2]))
z
sort(z)
